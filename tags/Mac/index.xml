<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on 执子之手</title>
    <link>https://orchidflower.github.io/tags/Mac/</link>
    <description>Recent content in Mac on 执子之手</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 04 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://orchidflower.github.io/tags/Mac/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>删除启动台Launchpad上无效的图标</title>
      <link>https://orchidflower.github.io/2020/12/04/Delete-Invalid-Icon-from-Lauchpad/</link>
      <pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/12/04/Delete-Invalid-Icon-from-Lauchpad/</guid>
      <description>&lt;p&gt;今天删除软件的时候碰到一个问题，软件虽然被删除了，但是图标依然在启动台上。怎么也删不掉。上网搜了搜，找到一个办法可以解决。特此记录一下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 切换到目录 /private/var/folders&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;cd&lt;/span&gt; /private/var/folders
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 寻找 com.apple.dock.launchpad 目录，图标信息存在该目录中的一个sqlite3数据库中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span&gt;sudo find . &lt;span style=&#34;color:#111&#34;&gt;|&lt;/span&gt; grep com.apple.dock.launchpad
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 确定好目录，然后使用cd转入对应的目录。目录名不同机器上不一样&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用sqlite3工具查询一下&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span&gt;sqlite3 db &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;select * from apps where title like &amp;#39;eclipse%&amp;#39;;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 确认之后可以使用delete语句删除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span&gt;sqlite3 db &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;delete from apps where title like &amp;#39;eclipse%&amp;#39;;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 然后杀掉Dock进程，就好了&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span&gt;killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>禁用CleanMyMacX HealthMonitor</title>
      <link>https://orchidflower.github.io/2020/11/27/How-to-Disable-CleanMyMacX-HealthMonitor/</link>
      <pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/11/27/How-to-Disable-CleanMyMacX-HealthMonitor/</guid>
      <description>&lt;p&gt;&lt;code&gt;CleanMyMacX&lt;/code&gt; 是&lt;code&gt;Mac&lt;/code&gt;平台上优秀的卸载工具。虽然&lt;code&gt;Mac&lt;/code&gt;上的应用安装卸载比&lt;code&gt;Windows&lt;/code&gt;上简单很多，&lt;code&gt;AppStore&lt;/code&gt;上的软件采用的是沙盒模型，删除的时候会把相关的数据一并删除；但是大量的非&lt;code&gt;AppStore&lt;/code&gt;软件在删除对应的app之后不会同时删除对应的数据。 &lt;code&gt;CleanMyMacX&lt;/code&gt; 这种类型的软件会扫描这些相关的数据并一起删除。&lt;/p&gt;
&lt;p&gt;最近发现 &lt;code&gt;CleanMyMacX&lt;/code&gt; 会附带一个后台服务：&lt;code&gt;CleanMyMacX HealthMonitor&lt;/code&gt;，即使软件本身退出这个后台服务还一直运行。这就有点360的味道了，让人不爽。最主要的是这个进程对资源的占用还是有的，没有到那种可以完全忽略的地步。因此想办法禁用它。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Python写一个Alfred Workflow</title>
      <link>https://orchidflower.github.io/2020/08/21/Build-Alfred-workflow-using-python/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/08/21/Build-Alfred-workflow-using-python/</guid>
      <description>&lt;h1 id=&#34;1-alfred-和-workflows-介绍&#34;&gt;1. &lt;code&gt;Alfred&lt;/code&gt; 和 &lt;code&gt;Workflows&lt;/code&gt; 介绍&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Alfred&lt;/code&gt; 号称是 &lt;code&gt;Mac&lt;/code&gt; 上最强大的效率工具，一直在 &lt;code&gt;Mac&lt;/code&gt; 平台的工具类中排名榜首。它在&lt;code&gt;Spotlight&lt;/code&gt; （ &lt;code&gt;Mac&lt;/code&gt; 自带的搜索和快速启动引擎）基础上优化了快速启动与搜索的功能，还引入了 &lt;code&gt;Workflows&lt;/code&gt; 等强大的扩展功能，使之成为了一个拥有无限自动化潜力的「工具平台」软件，可以用它来实现近乎一切有关自动化的想法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Worflows&lt;/code&gt; 是 &lt;code&gt;Alfred&lt;/code&gt; 的高端应用方式，它以流的方式来进行工作，从输入 -&amp;gt; 动作 -&amp;gt; 输出，将各种工具串联在一起进行工作，非常开放，用来将各种功能串联起来执行，可以定制完成各种想要实现的功能，潜力无限。&lt;/p&gt;
&lt;p&gt;虽然网上已经有很多别人写好的 &lt;code&gt;Workflow&lt;/code&gt;，但总是不够用，毕竟各自的偷懒点不同，因此有必要学会 &lt;code&gt;Workflow&lt;/code&gt; 的编写，可以更好的满足自己的要求。&lt;/p&gt;
&lt;h1 id=&#34;2-开始写一个workflows&#34;&gt;2. 开始写一个&lt;code&gt;Workflows&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;今天想写一个生成随机字符串的&lt;code&gt;Workflow&lt;/code&gt;，可选接收一个长度参数，生成指定长度的字符串，这个字符串可以由数字、字符、数字+字符等构成。下面说一下整个创建过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mac休眠模式调整</title>
      <link>https://orchidflower.github.io/2020/08/11/How-to-change-hibernate-mod-for-Mac/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/08/11/How-to-change-hibernate-mod-for-Mac/</guid>
      <description>&lt;p&gt;手头的Mac已经用了三年了，之前合盖睡眠的时候感觉掉电还不明显，最近几次系统升级后感觉掉电的情况明显了，一个晚上会掉5%左右，虽然不多，但是还是不爽。
经过搜索，发现可以通过修改休眠模式，来解决这个问题，特此记录一下。&lt;/p&gt;
&lt;h1 id=&#34;1-pmset及参数介绍&#34;&gt;1. pmset及参数介绍&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;pmset&lt;/code&gt;是Mac的一个系统命令，可以用来修改和电源管理相关的参数。看&lt;code&gt;man&lt;/code&gt;中的帮助：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pmset can modify the values of any of the power management settings defined below. You may specify one or more
setting &amp;amp; value pairs on the command-line invocation of pmset.  The -a, -b, -c, -u flags determine whether the
settings apply to battery ( -b ), charger (wall power) ( -c ), UPS ( -u ) or all ( -a ).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单来说就是可以通过&lt;code&gt;pmset -b&lt;/code&gt;或&lt;code&gt;pmset -c&lt;/code&gt;,&lt;code&gt;pmset -a&lt;/code&gt;等命令修改电源配置参数。当然也可以通过&lt;code&gt;pmset -g&lt;/code&gt;命令查询当前的配置参数或日志等。例如以下命令可以查看当前系统的电源相关配置：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Mac上编译RedisDesktopManager（1）国际化处理</title>
      <link>https://orchidflower.github.io/2020/07/01/How-to-build-Redis-Desktop-Manager-on-Mac/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/07/01/How-to-build-Redis-Desktop-Manager-on-Mac/</guid>
      <description>&lt;h1 id=&#34;1-概述&#34;&gt;1. 概述&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis Desktop Manager（RedisDesktopManager，RDM）是一个快速、简单、支持跨平台的 Redis 桌面管理工具，基于 Qt 5 开发，支持通过 SSH Tunnel 连接。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 开源中国上面对项目的介绍&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RedisDesktopManager&lt;/code&gt; 是一款优秀的 &lt;code&gt;Redis&lt;/code&gt; 客户端。最初是作为开源项目发布的，官方也会发布编译好的版本。后来，作者做了一些商业化处理，上架了&lt;code&gt;App Store&lt;/code&gt;，从此不再发布编译后的版本，也在开源版本中阉割掉了 &lt;code&gt;SSH Tunnel&lt;/code&gt; 功能。有鉴于此，网上有很多人写教程来说明如何从源码构建一个发行版本，但是目前见到的教程多多少少都有一些问题。最近花了一些时间尝试完善整个编译过程，目前进展不错。以后会陆续说明编译过程中碰到的问题以及对应的解决办法。&lt;/p&gt;
&lt;p&gt;今天首先来说一下国际化的问题。&lt;/p&gt;
&lt;p&gt;目前网上流行的 &lt;code&gt;RedisDesktopManager&lt;/code&gt; 编译方法都没有对国际化文件进行处理，所以编译后的版本没有国际化功能，界面只显示英文，语言切换功能无效。经过对相关源码的分析，终于找到了正确的编译处理方法，现在可以完美切换语言。效果如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://blog-cache.orchidflower.cn/2020-07-02-15936592204991.jpg&#34; alt=&#34;-w800&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在Mac上编译vcmi（续）-cpack打包后异常退出</title>
      <link>https://orchidflower.github.io/2020/06/26/How-to-build-vcmi-on-mac-part3/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/06/26/How-to-build-vcmi-on-mac-part3/</guid>
      <description>&lt;h1 id=&#34;1-现象&#34;&gt;1. 现象&lt;/h1&gt;
&lt;p&gt;VCMI编译之后可以使用&lt;code&gt;cpack&lt;/code&gt;命令（cmake的一个功能）打包成dmg文件，以便于分发。打包过程中会把需要的依赖文件都打包到最后的&lt;code&gt;.app&lt;/code&gt;文件中，这样就可以保证在其他机器上也可以正常运行编译后的VCMI。
按照之前的文档，编译之后直接执行没有问题，但是使用&lt;code&gt;cpack&lt;/code&gt;打包之后运行缺会异常退出。经过观察基本上发生在第一次战斗中，玩家操作完毕，电脑AI获得控制权的时候就会崩溃退出。&lt;/p&gt;
&lt;h1 id=&#34;2-分析&#34;&gt;2. 分析&lt;/h1&gt;
&lt;p&gt;最初怀疑是新版本代码有问题，所以切换到之前版本的代码编译，发现还是有同样的问题。后来经过分析退出的时间点，怀疑是&lt;code&gt;vcmi&lt;/code&gt;的AI代码有问题，因为对代码部分不是很熟悉，所以很长时间没有进展。
后来经过查看&lt;code&gt;cpack&lt;/code&gt;的工作原理，怀疑是AI库对应的依赖文件没有正确打包导致的。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;otool -L&lt;/code&gt;分析动态库依赖，发现AI目录下的文件没有进行依赖库的处理。还是指向&lt;code&gt;/usr/local/...&lt;/code&gt;下面的dylib文件。而&lt;code&gt;vcmiclient/vcmiserver&lt;/code&gt;已经进行了处理。因此怀疑是因为引入了两份动态库导致的问题，&lt;code&gt;vcmiclient&lt;/code&gt;已经加载了一份动态库，但是当执行到AI库的时候又要从其他位置加载另一份同名的动态库，可能是因为这个原因导致了崩溃。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在Mac上编译vcmi（续）-解决无法播放MP3的问题</title>
      <link>https://orchidflower.github.io/2020/06/21/How-to-build-vcmi-on-mac-part2/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/06/21/How-to-build-vcmi-on-mac-part2/</guid>
      <description>&lt;h1 id=&#34;1-问题&#34;&gt;1. 问题&lt;/h1&gt;
&lt;p&gt;按照上一篇文档的步骤编译之后，发现mp3格式的背景音乐无法播放。通过直接执行&lt;code&gt;vcmiclient&lt;/code&gt;可以看到在控制台中输出如下信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;Warning: Cannot open Music/MainMenu: Unrecognized audio format
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;Unable to play music (music parameter was NULL)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;原因是我本地环境使用的&lt;code&gt;sdl2_mixer&lt;/code&gt;是通过brew安装的，当时无法按照官方文档介绍通过&lt;code&gt;brew install sdl2_mixer --with-smpeg2&lt;/code&gt;进行安装。
因为发现无法播放mp3音乐，所以我对这个库进行了一些了解，发现brew官方的版本屏蔽了mp3格式的支持。查看brew官方的源码可以看到：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;inreplace&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;SDL2_mixer.pc.in&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;@prefix@&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;HOMEBREW_PREFIX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;%W[
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --prefix=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;#{&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;prefix&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-dependency-tracking
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-flac
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-flac-shared
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-midi-fluidsynth
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-midi-fluidsynth-shared
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-mod-mikmod-shared
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-mod-modplug-shared
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-mp3-mpg123
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-mp3-mpg123-shared
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-mp3-smpeg
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --disable-music-ogg-shared
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --enable-music-mod-mikmod
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --enable-music-mod-modplug
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;      --enable-music-ogg
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;    ]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;system&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;./configure&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;system&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;make&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;install&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;&lt;span&gt;  &lt;span style=&#34;color:#00a8c8&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到有关mp3的选项都被disabled掉了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在Mac上编译vcmi</title>
      <link>https://orchidflower.github.io/2020/05/09/How-to-build-vcmi-on-mac/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/05/09/How-to-build-vcmi-on-mac/</guid>
      <description>&lt;p&gt;&lt;code&gt;vcmi&lt;/code&gt;是英雄无敌三的开源引擎。与&lt;code&gt;fheroes2&lt;/code&gt;类似，它依托于英雄无敌3的游戏数据，使用完全重写、开源的引擎，实现了原版游戏的绝大多数功能。相比于原版游戏，对高清分辨率的支持也更好，譬如增加了宽屏分辨率的支持。&lt;code&gt;vcmi&lt;/code&gt;使用&lt;code&gt;c++&lt;/code&gt;语言编写，依赖库主要包括：&lt;code&gt;boost&lt;/code&gt;，&lt;code&gt;ffmpeg&lt;/code&gt;；图形库使用的是&lt;code&gt;SDL2&lt;/code&gt;。另外，图形启动工具依赖于&lt;code&gt;QT5&lt;/code&gt;。&lt;code&gt;vcmi&lt;/code&gt;支持平台包括&lt;code&gt;Windows&lt;/code&gt;，&lt;code&gt;MacOS&lt;/code&gt;，&lt;code&gt;Android&lt;/code&gt;和&lt;code&gt;Linux&lt;/code&gt;，算是全平台支持了。&lt;/p&gt;
&lt;p&gt;不过官方的发布系统好像有点问题，&lt;code&gt;MacOS&lt;/code&gt;版本最新到2019年9月，后面的版本没有构建成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vcmi.eu/img/2017/09/vcmionmac.jpg&#34; alt=&#34;VCMI介绍图片&#34;&gt;&lt;/p&gt;
&lt;p&gt;英雄无敌3，全称《魔法门之英雄无敌Ⅲ》，是1999年由&lt;code&gt;New World Computing&lt;/code&gt;在&lt;code&gt;Windows&lt;/code&gt;平台上开发的回合制策略魔幻游戏，其出版商是&lt;code&gt;3DO&lt;/code&gt;。在PC版发布之后，&lt;code&gt;3DO&lt;/code&gt;和&lt;code&gt;Loki Software&lt;/code&gt;分别推出了可在苹果机和Linux系统上运行的版本。&lt;/p&gt;
&lt;p&gt;该作是魔法门之英雄无敌系列的第三代。游戏情节参照第一次贯穿了《魔法门VI：天堂之令》，并且部分作为了《魔法门VII：血统与荣耀》的前传。玩家可以选择六个战役之中的一个来进行情节模式，也可以选择场景来进行与电脑或其他玩家的对抗。之后，又陆续发布了《末日之刃》、《死亡阴影》两个资料片，后来又发布了《英雄无敌历代记》共计8个战役。&lt;/p&gt;
&lt;p&gt;英雄无敌3历来被称为英雄无敌系列的经典之作，可以说是这个系列游戏的巅峰之作。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vcmi&lt;/code&gt;的官网有编译方法的说明，但是有些小的地方有些小问题。特此记录一下，以备后查。本次编译使用&lt;code&gt;cmake&lt;/code&gt;在命令行下面完成。需要确保已经安装了&lt;code&gt;xcode&lt;/code&gt;及&lt;code&gt;brew&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在Mac上编译fheroes2</title>
      <link>https://orchidflower.github.io/2020/05/08/How-to-build-fheroes2-on-mac/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/05/08/How-to-build-fheroes2-on-mac/</guid>
      <description>&lt;p&gt;&lt;code&gt;fheroes2&lt;/code&gt;是&lt;code&gt;英雄无敌2&lt;/code&gt;的开源引擎，它基于英雄无敌2的游戏数据，采用完全重写的引擎实现了绝大多数原版游戏的功能。使用的图形引擎是&lt;code&gt;SDL&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Free implementation of Heroes of the Might and Magic II engine. SDL is used.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;fheroes2&lt;/code&gt;最初是在&lt;code&gt;SourceForge&lt;/code&gt;上面开源的，不过最近两年基本停止更新了。最近在&lt;code&gt;Github&lt;/code&gt;上偶然发现了有人在继续开发了，并且对图形引擎进行了更新，同时支持&lt;code&gt;SDL2&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/ihhub/fheroes2/raw/master/docs/images/screenshots/screenshot_world_map.png?raw=true&#34; alt=&#34;英雄无敌2&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mac上面的文件比较功能</title>
      <link>https://orchidflower.github.io/2020/03/20/How-to-compare-file-on-mac/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/03/20/How-to-compare-file-on-mac/</guid>
      <description>&lt;p&gt;以前在Windows上一直使用TotalCmd，它的比较功能非常棒。不论是目录还是文件，只要按下F10，就能够比较，还能够同步，非常方便。切换到Mac也有好几年了，一直没有找到完全匹配上的替代品。现在用的是ForkLift，常用功能还可以，但是比较功能差距很大。目前正在想办法自己写一些脚本增强一下功能。&lt;/p&gt;
&lt;p&gt;目前实现了一个脚本，通过&lt;code&gt;ForkLift&lt;/code&gt;调用，可以满足基本的比较功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;file&lt;/code&gt;判断文件类型，对文本类型调用&lt;code&gt;FileMerge&lt;/code&gt;进行源码比较；&lt;/li&gt;
&lt;li&gt;如果不是，则只用&lt;code&gt;cmp&lt;/code&gt;功能比较内容是否相等；&lt;/li&gt;
&lt;li&gt;后期考虑增加对目录类型的支持，引入目录比较工具。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>如何在Mac上添加一个虚拟IP</title>
      <link>https://orchidflower.github.io/2017/07/09/How-to-add-one-virtual-IP-on-Mac/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/07/09/How-to-add-one-virtual-IP-on-Mac/</guid>
      <description>&lt;p&gt;最近忙着系统重构，因为经常处于移动办公的状态，访问公司的服务器不是很方便，所以一些基础服务都是搭建在本机上。但是使用的时候碰到了一些问题，最大的问题是网络地址切换导致的：IP地址总是不固定。有些服务（例如FastDFS）需要有明确的IP地址来绑定服务。不固定的IP地址会给这些服务带来麻烦，需要修改配置重启服务。
这种情况下，最好的解决办法是能够给Mac分配一个固定的IP，不管怎么切换网络一直存在。幸好这个是可以解决的，而且并不复杂。方法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;ifconfig lo0 alias 192.168.255.199
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其原理是给网络设备loopback增加一个alias。loopback设备一直存在，而且与en0设备独立，可以一直存在。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Mac上运行SOAPUI 5.3.0</title>
      <link>https://orchidflower.github.io/2017/06/21/Running-SOAPUI-5-3-0-on-Mac-OSX/</link>
      <pubDate>Wed, 21 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/06/21/Running-SOAPUI-5-3-0-on-Mac-OSX/</guid>
      <description>&lt;h1 id=&#34;0-前言&#34;&gt;0. 前言&lt;/h1&gt;
&lt;p&gt;Mac上找不到特别好的SOAP Webservice测试工具。以前用过SOAP UI，感觉很好。但是SOAP UI在Mac上安装有些问题。特此记录一下安装过程。&lt;/p&gt;
&lt;p&gt;SoapUI目前最新的版本是5.3.0，目前已经开源。SmartBear在SOAP UI之后发布了新版本更名为SOAPUI NG。SOAPUI NG体积大了很多，而且功能更加繁琐，个人感觉还不如以前的版本好用。SoapUI以前收费，到了5.2.1以后版本就开源并且免费了。&lt;/p&gt;
&lt;p&gt;SoapUI在Mac会出现无响应的现象：界面能够打开，但是画面卡住，鼠标显示成旋转彩球，无法操作。要正常使用需要修改一下才行。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Mac上如何安装FastDFS</title>
      <link>https://orchidflower.github.io/2017/06/18/How-to-install-FastDFS-on-Mac/</link>
      <pubDate>Sun, 18 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/06/18/How-to-install-FastDFS-on-Mac/</guid>
      <description>&lt;p&gt;项目中用到了FastDFS来做文件存储。最近重构的时候，因为经常处于移动办公的状态，所以访问公司的服务器不是很方便，所以感觉有必要在本机上搭建一套FastDFS的测试环境。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FastDFS是什么？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。
FastDFS为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用FastDFS很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。
FastDFS里面有两种角色：Tracker、Storage。Tracker主要做调度工作，在访问上起负载均衡的作用。Storage存储节点存储文件，完成文件管理的所有功能：存储、同步和提供存取接口，FastDFS同时对文件的meta data进行管理。所谓文件的meta data就是文件的相关属性，以键值对（key value pair）方式表示，如：width=1024，其中的key为width，value为1024。文件meta data是文件属性列表，可以包含多个键值对。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Docker for Mac磁盘性能低下的解决办法</title>
      <link>https://orchidflower.github.io/2017/03/29/Performance-regression-on-Docker-for-Mac/</link>
      <pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/03/29/Performance-regression-on-Docker-for-Mac/</guid>
      <description>&lt;p&gt;最近备份恢复Gogs的时候，发现同样的配置参数在Mac上访问Gogs的用户首页特别慢，大概耗时8秒，而在Linux上面运行的时候不到1秒钟。后来就上网搜索，加上自己试验，最后找到了原因应该是Gogs镜像本身的问题（可能是采用了alpine这一内核，但是具体原因不详，有待进一步实验）。&lt;/p&gt;
&lt;p&gt;这个过程中曾经怀疑是Docker运行MySQL过慢的原因，虽然最终发现不是，但是搜索过程中发现了Docker for Mac确实有性能问题，那就是对大量磁盘IO的操作性能会非常差，大概会差10倍。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Mac上启用Docker的Bash Completion</title>
      <link>https://orchidflower.github.io/2017/02/12/enable-docker-bash-completion-on-mac/</link>
      <pubDate>Sun, 12 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/02/12/enable-docker-bash-completion-on-mac/</guid>
      <description>&lt;h1 id=&#34;1-背景&#34;&gt;1. 背景&lt;/h1&gt;
&lt;p&gt;在Ubuntu上使用Docker的时候，使用tab键自动完成docker命令感觉非常方便，例如：只需要输入image或者container ID的前几位就可以使用Tab键补齐整个命令行。但是在Mac上却没有办法实现相同的操作。&lt;/p&gt;
&lt;p&gt;经过搜索终于找到了原因：原来是因为没有启用Bash completion功能导致的。而实际上Docker安装包内已经提供了针对Docker的&lt;code&gt;Bash Completion&lt;/code&gt;脚本，只需要启用即可。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
