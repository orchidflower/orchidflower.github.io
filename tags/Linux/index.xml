<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 执子之手</title>
    <link>https://orchidflower.github.io/tags/Linux/</link>
    <description>Recent content in Linux on 执子之手</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 26 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://orchidflower.github.io/tags/Linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux常用命令介绍 05 - unzip</title>
      <link>https://orchidflower.github.io/2021/02/26/linux-command-introduction-05-unzip/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2021/02/26/linux-command-introduction-05-unzip/</guid>
      <description>&lt;p&gt;unzip命令可以用来解压zip文件。用法比较简单，但是有些不太常用的命令需要记录一下。&lt;/p&gt;
&lt;h1 id=&#34;1-查看文件列表&#34;&gt;1. 查看文件列表&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;unzip -l ShadowHunters.epub
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 查看更详细信息，包括压缩率等&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span&gt;unzip -lv ShadowHunters.epub
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-解压文件&#34;&gt;2. 解压文件&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;unzip -d ./temp ShadowHunters.epub
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;3-解压一个文件&#34;&gt;3. 解压一个文件&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;-p&lt;/code&gt;命令，将文件内容输出到标准输出，然后使用重定向创建文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;unzip -p ShadowHunters.epub ops/xhtml/cover.html &amp;gt; cover.html
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;4-更新文件&#34;&gt;4. 更新文件&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;zip -u ShadowHunters.epub ops/xhtml/cover.html
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Linux常用命令介绍 04 - journalctl</title>
      <link>https://orchidflower.github.io/2020/04/20/linux-command-introduction-04-journalctl/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/04/20/linux-command-introduction-04-journalctl/</guid>
      <description>&lt;p&gt;&lt;code&gt;journalctl&lt;/code&gt;命令是&lt;code&gt;Systemd&lt;/code&gt;日志系统的一个命令，主要用途是用来查看通过&lt;code&gt;Systemd&lt;/code&gt;日志系统记录的日志。在&lt;code&gt;Systemd&lt;/code&gt;出现之前，&lt;code&gt;Linux&lt;/code&gt;系统及各应用的日志都是分别管理的，&lt;code&gt;Systemd&lt;/code&gt;开始统一管理了所有&lt;code&gt;Unit&lt;/code&gt;的启动日志，这样带来的好处就是可以只用一个 &lt;code&gt;journalctl&lt;/code&gt;命令，查看所有内核和应用的日志。&lt;/p&gt;
&lt;h1 id=&#34;1-基础用法&#34;&gt;1. 基础用法&lt;/h1&gt;
&lt;h2 id=&#34;11-查看所有日志&#34;&gt;1.1 查看所有日志&lt;/h2&gt;
&lt;p&gt;不用添加任何任何参数运行可以查看本次启动以来的所有日志。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 显示本次启动以来的全部日志&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;journalctl 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;12-查看内核日志&#34;&gt;1.2 查看内核日志&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;-k&lt;/code&gt;参数可以查看内核日志。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 显示内核日志&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;journalctl -k
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Linux常用命令介绍 03 - tree</title>
      <link>https://orchidflower.github.io/2020/04/07/linux-command-introduction-03-tree/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/04/07/linux-command-introduction-03-tree/</guid>
      <description>&lt;p&gt;tree命令的作用是以树状图的形式列出目录的内容。通常在写文档时需要列一下文件目录结构，这个时候&lt;code&gt;tree&lt;/code&gt;命令就非常有用了&lt;/p&gt;
&lt;h1 id=&#34;1-安装使用&#34;&gt;1. 安装&amp;amp;使用&lt;/h1&gt;
&lt;p&gt;我用的Ubuntu上默认没有安装&lt;code&gt;tree&lt;/code&gt;命令。可以通过：&lt;code&gt;sudo apt install tree&lt;/code&gt;命令安装。其他的发行版参考对应的命令。&lt;/p&gt;
&lt;p&gt;直接使用&lt;code&gt;tree&lt;/code&gt;命令或者&lt;code&gt;tree [directory]&lt;/code&gt;命令即可列出目录中的内容。&lt;/p&gt;
&lt;h1 id=&#34;2-只列出目录&#34;&gt;2. 只列出目录&lt;/h1&gt;
&lt;p&gt;默认情况下，&lt;code&gt;tree&lt;/code&gt;命令会同时列出目录中的文件。例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 列出全部内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;tree .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;&lt;span&gt;├── Cargo.lock
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;&lt;span&gt;├── Cargo.toml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;&lt;span&gt;└── src
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;&lt;span&gt;    └── main.rs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; directory, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不想显示文件，则可以使用&lt;code&gt;-d&lt;/code&gt;参数，只列出文件夹：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 只列出目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;tree -d .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;&lt;span&gt;└── src
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; directory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Linux常用命令介绍 02 - ssh</title>
      <link>https://orchidflower.github.io/2020/03/29/linux-command-introduction-02-ssh/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/03/29/linux-command-introduction-02-ssh/</guid>
      <description>&lt;p&gt;SSH在Linux中占有重要的地位。通常我们远程登录服务器都是通过ssh协议，但是ssh命令（或者SSH协议）能够实现的功能还有很多。我日常用到一些，但是肯定还有各种各样的用法，有兴趣的朋友可以自行搜索更多资料。&lt;/p&gt;
&lt;h1 id=&#34;1-防止掉线&#34;&gt;1. 防止掉线&lt;/h1&gt;
&lt;p&gt;使用SSH连接服务器时候，通常第一个要修改的选项就是防止掉线。总体上来说有两类方法来防止服务器掉线：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端/客户端工具发送心跳包；&lt;/li&gt;
&lt;li&gt;服务器端发送心跳包。
如果有服务器的控制权，可以修改ssh的配置选项，推荐使用第二种方案，通常更有保障一些。如果没有服务器的控制权，那就只能用第一种了。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Linux常用命令介绍 01 - curl</title>
      <link>https://orchidflower.github.io/2020/03/13/linux-command-introduction-01-curl/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2020/03/13/linux-command-introduction-01-curl/</guid>
      <description>&lt;p&gt;很久没有更新博客了。之前一直用hexo，配置起来稍显复杂，单个的时间一长有些忘了，搞不起来了，于是荒废了很长时间。最近下定决心迁移到了Hugo上。总体感觉Hugo速度确实快，这一点非常喜欢。以后有时间可以介绍一下这次迁移的过程。&lt;/p&gt;
&lt;p&gt;这几年一直不间断的与Linux打交道，但是Linux的命令一直没有深入研究过，所以碰到问题的时候还是要各种搜索，挺麻烦的。这次想整理一个常用命令的介绍系列，把平常用到的命令简单介绍一下。不会是详尽的帮助类介绍，更多的是基于场景的介绍：譬如要实现什么功能用什么参数之类的。作为以后的备查吧，就不用再到处搜索了。：）&lt;/p&gt;
&lt;p&gt;第一个命令介绍curl。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Shell脚本中的一些特殊变量</title>
      <link>https://orchidflower.github.io/2017/08/05/Some-special-parameters-in-Shell/</link>
      <pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/08/05/Some-special-parameters-in-Shell/</guid>
      <description>&lt;p&gt;Shell脚本的一些参数总是感觉记不住，特此记录一下，以备后查。&lt;/p&gt;
&lt;h1 id=&#34;1-参数说明&#34;&gt;1. 参数说明&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$0&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当前脚本的文件名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;mdash;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$n&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$#&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;传递给脚本或函数的参数个数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$*&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;传递给脚本或函数的所有参数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$@&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;传递给脚本或函数的所有参数。被双引号(&amp;quot; &amp;ldquo;)包含时，与 $* 稍有不同，下面将会讲到。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$?&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;上个命令的退出状态，或函数的返回值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>xargs使用复杂参数</title>
      <link>https://orchidflower.github.io/2017/07/30/How-to-using-argument-in-xargs/</link>
      <pubDate>Sun, 30 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/07/30/How-to-using-argument-in-xargs/</guid>
      <description>&lt;p&gt;一般情况下xargs只处理一个参数，因此可以这样使用，最后的rm会自动补齐一个参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;find . | grep hello | xargs rm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是有时候需要多个参数才能够正常运行，这时候怎么办呢？可以这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;ls -1 2016*.log | xargs -I % -t tar czvf %.tar.gz % --remove-files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述命令的意思是将当前目录中所有&lt;code&gt;2016*.log&lt;/code&gt;文件使用tar打包成tar.gz文件，并删除源文件。其中：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何无密码登录SSH</title>
      <link>https://orchidflower.github.io/2017/07/23/How-to-login-without-password-over-SSH/</link>
      <pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/07/23/How-to-login-without-password-over-SSH/</guid>
      <description>&lt;p&gt;我们在用&lt;code&gt;Jenkins&lt;/code&gt;做发布工具的时候，经常用到的功能是通过&lt;code&gt;SSH&lt;/code&gt;通道完成各种功能。例如使用&lt;code&gt;scp&lt;/code&gt;命令拷贝安装包到服务器上，通过&lt;code&gt;ssh -t&lt;/code&gt;命令执行服务器上的脚本等。&lt;/p&gt;
&lt;p&gt;这时就需要配置无密码登录，否则无法做到自动执行命令。如果每次都手动输入密码，想想都不现实。要实现无密码登录，需要配置好SSH允许证书登录。&lt;/p&gt;
&lt;p&gt;其原理是使用了公钥体系，假设有服务器Server，用户在服务器Client上，用户在服务器Client上有私钥Private Key，在服务器Server上有对应的公钥Public Key。这样访问的时候Server就能够通过公钥体系进行验证：要求用户使用其私钥进行签名，从而确保用户拥有私钥，以此验证用户身份。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://blog-cache.orchidflower.cn/mweb/sshauthentication.png&#34; alt=&#34;公钥体系原理图&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在alias命令中使用单引号</title>
      <link>https://orchidflower.github.io/2017/07/16/How-to-using-single-quota-in-alias-command/</link>
      <pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/07/16/How-to-using-single-quota-in-alias-command/</guid>
      <description>&lt;p&gt;Linux中的alias命令可以将一条复杂的命令缩短为一个简单的指令，实际工作中经常会用到。使用alias的时候命令本身需要使用单引号包括起来。但是如果命令本身中包含单引号怎么办呢？&lt;/p&gt;
&lt;p&gt;例如，下面这条命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;ps -ef &lt;span style=&#34;color:#111&#34;&gt;|&lt;/span&gt; grep shadowsocks/server.py &lt;span style=&#34;color:#111&#34;&gt;|&lt;/span&gt; grep -v grep &lt;span style=&#34;color:#111&#34;&gt;|&lt;/span&gt; awk &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其作用是获取任务的pid。其中用到的&lt;code&gt;awk&lt;/code&gt;的参数需要用到单引号。alias也可以使用双引号，但是如果用双引号，其中的内容会被转义解释成具体获得的值。而不是命令本身。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Let&#39;s Encrypt免费证书的使用</title>
      <link>https://orchidflower.github.io/2017/07/02/How-to-use-Let-s-Encrypt/</link>
      <pubDate>Sun, 02 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://orchidflower.github.io/2017/07/02/How-to-use-Let-s-Encrypt/</guid>
      <description>&lt;h1 id=&#34;1-背景&#34;&gt;1. 背景&lt;/h1&gt;
&lt;p&gt;因为云认证服务的商户认证体系是基于双向&lt;code&gt;SSL&lt;/code&gt;的，如果服务器端没有启用&lt;code&gt;SSL&lt;/code&gt;证书，则整个认证体系必须重构。目前的现状是申请&lt;code&gt;SSL&lt;/code&gt;证书费用比较高（一年2-3w），而且周期比较长，赶不上目前的测试进度。所以只能使用免费证书来支撑一下了。&lt;/p&gt;
&lt;p&gt;免费证书服务提供商据我所知有几个：&lt;code&gt;Let&#39;s Encrypt&lt;/code&gt;, &lt;code&gt;StartSSL&lt;/code&gt;, &lt;code&gt;StarCom&lt;/code&gt;。但是&lt;code&gt;StartSSL&lt;/code&gt;, &lt;code&gt;StarCom&lt;/code&gt;前一阵子被&lt;code&gt;Chrome&lt;/code&gt;、&lt;code&gt;Firefox&lt;/code&gt;等设置为不可信（签名流程不规范，不符合安全监管要求之类的原因），因此目前可选的只有&lt;code&gt;let&#39;s encrypt&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Let&#39;s Encrypt&lt;/code&gt;是国外一个公共的免费 &lt;code&gt;SSL&lt;/code&gt; 项目，由 &lt;code&gt;Linux&lt;/code&gt; 基金会托管，它的来头不小，由&lt;code&gt;Mozilla&lt;/code&gt;、思科、&lt;code&gt;Akamai&lt;/code&gt;、&lt;code&gt;IdenTrust&lt;/code&gt;和&lt;code&gt;EFF&lt;/code&gt;等组织发起，目的就是向网站自动签发和管理免费证书，以便加速互联网由 &lt;code&gt;HTTP&lt;/code&gt; 过渡到 &lt;code&gt;HTTPS&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
